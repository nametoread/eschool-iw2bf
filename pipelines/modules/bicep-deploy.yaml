parameters:
  - name: azureConnection
    default: ""
  - name: rgName
    default: ""
  - name: file
    default: ""
  - name: params
    default: ""

stages:
  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
          - task: AzureCLI@2
            name: Deploy
            displayName: Deploy base infrastructure to Azure
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az deployment group create \
                  --name dep-missionctl-$(Build.BuildNumber) \
                  --resource-group ${{ parameters.rgName }} \
                  --template-file ${{ parameters.file }} \
                  --parameters ${{ parameters.params }}
      - job: UpdateLibrary
        displayName: Update Library
        dependOn: Deploy
        steps:
          - task: AzureCLI@2
            name: SaveACRname
            displayName: Save Container Registry name to global group
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                ACR_NAME=$(az deployment group show \
                  --name dep-missionctl-$(Build.BuildNumber) \
                  --resource-group ${{ parameters.rgName }} \
                  --query properties.outputs.crName \
                  --output tsv
                )

                VG_ID=$(az pipelines variable-group list \
                  --group-name globalGroup \
                  --query "[].id" \
                  --output tsv
                )

                VAR_EXIST=$(az pipelines variable-group variable list \
                  --group-id $VG_ID \
                  --query "acrName" \
                  --output tsv
                )      

                VG_ACTION=update

                if [ -z "$VAR_EXIST" ]; then
                  VG_ACTION=create
                fi

                az pipelines variable-group variable "$VG_ACTION" \
                  --group-id $VG_ID \
                  --name acrName \
                  --value $ACR_NAME
