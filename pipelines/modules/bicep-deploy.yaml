parameters:
  - name: azureConnection
    default: ""
  - name: rgName
    default: ""
  - name: file
    default: ""
  - name: params
    default: ""
  - name: outputs
    type: object
    default: []

stages:
  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
          - task: AzureCLI@2
            name: Deploy
            displayName: Deploy base infrastructure to Azure
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az deployment group create \
                  --name dep-missionctl-$(Build.BuildNumber) \
                  --resource-group ${{ parameters.rgName }} \
                  --template-file ${{ parameters.file }} \
                  --parameters ${{ parameters.params }}
      - job: UpdateLibrary
        displayName: Update Library with outputs
        dependsOn: Deploy
        steps:
          - task: AzureCLI@2
            name: DevOpsParamsConfigure
            displayName: Set default DevOps parameters
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az devops configure \
                  --defaults \
                    organization=$(System.TeamFoundationCollectionUri) \
                    project=$(System.TeamProject) \
                  --use-git-aliases true
          - ${{ each output in parameters.outputs }}:
            task: AzureCLI@2
            name: SaveVar_${{ output }}
            displayName: Save '${{ output }}' to global group
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                ACR_NAME=$(az deployment group show \
                  --name dep-missionctl-$(Build.BuildNumber) \
                  --resource-group ${{ parameters.rgName }} \
                  --query properties.outputs.${{ output }}.value \
                  --output tsv
                )

                VG_ID=$(az pipelines variable-group list \
                  --group-name globalGroup \
                  --query "[].id" \
                  --output tsv
                )

                VAR_EXIST=$(az pipelines variable-group variable list \
                  --group-id "$VG_ID" \
                  --query "${{ output }}" \
                  --output tsv
                )      

                VG_ACTION=update

                if [ -z "$VAR_EXIST" ]; then
                  VG_ACTION=create
                fi

                az pipelines variable-group variable "$VG_ACTION" \
                  --group-id "$VG_ID" \
                  --name ${{ output }} \
                  --value "$ACR_NAME"
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
