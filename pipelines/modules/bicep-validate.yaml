parameters:
  - name: azureConnection
    default: ""
  - name: rgName
    default: ""
  - name: rgLocation
    default: ""
  - name: file
    default: ""
  - name: params
    default: ""

stages:
  - stage: Validate
    jobs:
      - job: LintBicep
        displayName: Lint Bicep code
        steps:
          - script: |
              az bicep build --file ${{ parameters.file }}
            name: LintBicepCode
            displayName: Run Bicep linter
      - job: ValidateBicep
        displayName: Validate Bicep code
        steps:
          - task: AzureCLI@2
            name: ResourceGroupExist
            displayName: Check Resource group existance
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                RG_EXIST=$(az group exists --name ${{ parameters.rgName }})
                echo "$RG_EXIST"
                if [ "$RG_EXIST" = false ]; then
                  az group create \
                    --name ${{ parameters.rgName }} \
                    --location "${{ parameters.rgLocation }}"
                fi
          - task: AzureCLI@2
            name: RunPreflightValidation
            displayName: Run preflight validation
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az deployment group validate \
                  --resource-group ${{ parameters.rgName }} \
                  --template-file ${{ parameters.file }} \
                  --parameters ${{ parameters.params }}
          - task: AzureCLI@2
            name: CleanUp
            displayName: Clean up temporary resources
            inputs:
              azureSubscription: ${{ parameters.azureConnection }}
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                echo "$RG_EXIST"
                if [ "$RG_EXIST" = false ]; then
                  az group delete \
                    --name ${{ parameters.rgName }}
                fi
